#Uses Python3
import subprocess
import sys
import os
import readline
import mmap
import os.path
import requests
import socket
import errno
import threading
from socket import error as socket_error
import ipaddress


try:
	def httpsScan(ip, port):
		print("\n***********************************************\033[1;33;40mHTTPS SCAN\033[m************************************************\n")
		sslscan = "sslscan "+ip+":"+port+" >> /root/Desktop/MyScripts/Reports/"+ip+"/-SSL-HTTPS-Scan-.txt"
		os.system(sslscan)
		heartbleed = "nmap --script=ssl-heartbleed -p 443 "+ip
		os.system(heartbleed)



	def httpScan(ip, port):
		print("\n***********************************************\033[1;33;40mHTTP SCAN\033[m************************************************\n")
		httpscan = "nmap -sV -Pn -T5 -p "+port+" --script=http-userdir-enum,http-methods,http-passwd,http-robots.txt,http-frontpage-login,http-git,http-iis-webdav-vuln,http-php-version,http-shellshock,http-vuln-cve2015-1635 -oN /root/Desktop/MyScripts/Reports/"+ip+"/-nmap-HTTP-Scan-.txt "+ip
		#httpscan = "nmap -sV -Pn -T5 -p "+port+" --script=http-vhosts,http-userdir-enum,http-apache-negotiation,http-backup-finder,http-config-backup,http-default-accounts,http-methods,http-method-tamper,http-passwd,http-robots.txt,http-devframework,http-enum,http-frontpage-login,http-git,http-iis-webdav-vuln,http-php-version,http-robots.txt,http-shellshock,http-vuln-cve2015-1635 -oN /root/Desktop/MyScripts/Reports/"+ip+"/-nmap-HTTP-Scan-.txt "+ip
		os.system(httpscan)



	def smbEnum(ip):
		print("\n***********************************************\033[1;33;40mSMB ENUM\033[m************************************************\n")
		enum4linux = "enum4linux -a "+ip+" > /root/Desktop/MyScripts/Reports/"+ip+"/-enum4linux-smbENUM-Scan-.txt"
		os.system(enum4linux)



	def smbScan(ip):
		print("\n***********************************************\033[1;33;40mSMB SCAN\033[m************************************************\n")
		smbnmap = "nmap --script=smb-enum-shares,smb-ls,smb-enum-users,smb-mbenum,smb-os-discovery,smb-security-mode,smb-vuln-cve2009-3103,smb-vuln-ms06-025,smb-vuln-ms07-029,smb-vuln-ms08-067,smb-vuln-ms10-054,smb-vuln-ms10-061,smb-vuln-regsvc-dos "+ip+" -oN /root/Desktop/MyScripts/Reports/"+ip+"/-nmap-smbSCAN-Scan-.txt "+ip
		os.system(smbnmap)


	def smtpScan(ip, port):
		print("\n***********************************************\033[1;33;40mSMTP SCAN\033[m************************************************\n")
		smtpscan = "nmap -sV -Pn -p "+port+" --script=smtp-commands,smtp-enum-users,smtp-vuln-cve2010-4344,smtp-vuln-cve2011-1720,smtp-vuln-cve2011-1764 %s -oN /root/Desktop/MyScripts/Reports/"+ip+"/-nmap-SMTP-Scan-.txt "+ip
		os.system(smtpscan)


	def ftpScan(ip, port):
		print("\n***********************************************\033[1;33;40mFTP SCAN\033[m************************************************\n")
		ftpscan = "nmap -sV -Pn -p "+port+" --script=ftp-anon,ftp-bounce,ftp-libopie,ftp-proftpd-backdoor,ftp-vsftpd-backdoor,ftp-vuln-cve2010-4221 -oN /root/Desktop/MyScripts/Reports/"+ip+"/-nmap-FTP-Scan-.txt "+ip
		os.system(ftpscan)


	def sshScan(ip, port):
		print("\n***********************************************\033[1;33;40mSSH SCAN\033[m************************************************\n")
		sshscan = "nmap -sV -Pn -p "+port+" --script=ssh-auth-methods,ssh-hostkey,ssh-run,sshv1 -oN /root/Desktop/MyScripts/Reports/"+ip+"/-nmap-SSH-Scan-.txt "+ip
		os.system(sshscan)


	def mssqlScan(ip, port):
		print("\n***********************************************\033[1;33;40mMS-SQL SCAN\033[m************************************************\n")
		mssqlscan = "nmap -sV -Pn -p "+port+" --script=ms-sql-info,ms-sql-config,ms-sql-dump-hashes,mysql-empty-password,mysql-brute,mysql-users,mysql-variables,mysql-vuln-cve2012-2122 --script-args=mssql.instance-port=1433,mssql.username=sa,mssql.password=sa -oN /root/Desktop/MyScripts/Reports/"+ip+"/-nmap-MSSQL-Scan-.txt "+ip
		os.system(mssqlscan)


	def niktoScan(ip, port):
		if port == "":
			print("\n***********************************************\033[1;33;40mNIKTO SCAN\033[m************************************************\n")
			niktocmd = "nikto -h http://"+ip+" -o /root/Desktop/MyScripts/Reports/"+ip+"/-nikto-Scan-.txt"
			os.system(niktocmd)

		else:
			print("\n***********************************************\033[1;33;40mNIKTO SCAN\033[m************************************************\n")
			niktocmd = "nikto -h http://"+ip+":"+port+" -o /root/Desktop/MyScripts/Reports/"+ip+"/-nikto-Scan-.txt"
			os.system(niktocmd)

	def dirsearchScan(ip, port):
		check = "/root/Desktop/MyScripts/Reports/"+ip+"/-dirsearch-Scan-.txt"
		os.path.exists(check)
		if os.path.exists(check):
			print("\n***********************************************\033[1;33;40mDirsearch SCAN\033[m************************************************\n")
			dircmd = "dirsearch.py -u http://"+ip+" -e .php --plain-text-report=/root/Desktop/MyScripts/Reports/"+ip+"/-dirsearch-Scan-1.txt"
			os.system(dircmd)

		elif port == "":
			print("\n***********************************************\033[1;33;40mDirsearch SCAN\033[m************************************************\n")
			dircmd = "dirsearch.py -u http://"+ip+" -e .php --plain-text-report=/root/Desktop/MyScripts/Reports/"+ip+"/-dirsearch-Scan-.txt"
			os.system(dircmd)

		else:
			print("\n***********************************************\033[1;33;40mDirsearch SCAN\033[m************************************************\n")
			dircmd =  "dirsearch.py -u http://"+ip+":"+port+" -e .php --plain-text-report=/root/Desktop/MyScripts/Reports/"+ip+"/-dirsearch-Scan-.txt"
			os.system(dircmd)
		'''
	def dirbScan(ip, port):
		check = "/root/Desktop/MyScripts/Reports/"+ip+"/-dirb-Scan-.txt"
		os.path.exists(check)
		if os.path.exists(check):
			print("\n***********************************************\033[1;33;40mDIRB SCAN\033[m************************************************\n")
			dirbcmd = "dirb http://"+ip+" -o ~/Desktop/MyScripts/Reports/"+ip+"/-dirb-Scan-1.txt"
			dirb = os.system(dirbcmd)

		elif port == "":
			print("\n***********************************************\033[1;33;40mDIRB SCAN\033[m************************************************\n")
			dirbcmd = "dirb http://"+ip+" -o ~/Desktop/MyScripts/Reports/"+ip+"/-dirb-Scan-.txt"
			dirb = os.system(dirbcmd)

		else:
			print("\n***********************************************\033[1;33;40mDIRB SCAN\033[m************************************************\n")
			dirbcmd = "dirb http://"+ip+":"+port+" -o ~/Desktop/MyScripts/Reports/"+ip+"/-dirb-Scan-.txt"
			dirb = os.system(dirbcmd)
			'''


	def masscan(ip):

		rate_limit = 1000
		interface = "tun0"

		print ("Masscan Port Scanning")
		print("\nDefault masscan command to be used: masscan -p1-65535,U:1-65535 "+ip+" --wait 0 --rate=1000 -e tun0 -oG file.txt")
		customized_command = input("\nDo you want to customize this masscan command?\n 1. Yes\n 2. No\n 3. OSCP command\n\nYour input: ")
		ip_new = ""
		count = 0
		for i in ip:
			if "." in i:
				count+=1
			ip_new += i
			if count==2:
				break

		find_interface = "ip -o -4 addr show | grep "+ip_new+" | awk '{print $2\": \"$4}' "

		find_interface_execute = subprocess.check_output(find_interface, shell=True)
		interface_extracted = ""
		find_interface_execute = find_interface_execute.decode("utf-8")

		if find_interface_execute == "":
			interface = input("\nCannot detect interface, please provide one: \n")
		else:
			for i in find_interface_execute:
				if i==":":
					break
				interface_extracted += i

		if customized_command == "1":
			new_option = ""

			while True:
				customized_command = input("\nPlease select changes:\n1. Rate \n2. Interface \n3. Add Options \n4. Done\n\nYour input: ")

				if customized_command == "1":
					rate_limit = input("\nEnter new rate limit \n\nYour input: ")
				elif customized_command == "2":
					interface = input("\nEnter new interface \n\nYour input: ")
				elif customized_command == "3":
					new_option = input("\nEnter option to be added \n\nYour input: ")
				elif customized_command == "4":
					break
			modified_command = "masscan -p1-65535,U:1-65535 "+ip+" --wait 0 --rate="+str(rate_limit)+" -e "+str(interface)+" "+str(new_option)+" -oG file.txt"#+" | awk '{print $4}' > /root/Desktop/MyScripts/Reports/"+ip+"/-masscan-output-.txt"
			masscan = os.system(modified_command)
			trim_output = "cat file.txt | awk 'OFS=\":\" {print $2,$5}' | cut -d/ -f-1 | cut -d : -f 2 | grep -o '^[0-9]*'"
			trim_cmd = subprocess.check_output(trim_output, shell=True)
			split = trim_cmd.decode("utf-8")
			split = split.split("\n")
			os.system("rm file.txt")
			return split

		elif customized_command == "2":

			print("\n\nThe command that will be used is: masscan -p1-65535,U:1-65535 "+ip+" --wait 0 --rate=1000 -e "+interface_extracted)
			if interface_extracted == "":
				masscancmd = "masscan -p1-65535,U:1-65535 "+ip+" --wait 0 --rate=1000 -e "+interface+" -oG file.txt"
			else:
				masscancmd = "masscan -p1-65535,U:1-65535 "+ip+" --wait 0 --rate=1000 -e "+interface_extracted+" -oG file.txt"
			masscan = os.system(masscancmd)
			trim_output = "cat file.txt | awk 'OFS=\":\" {print $2,$5}' | cut -d/ -f-1 | cut -d : -f 2 | grep -o '^[0-9]*'"
			trim_cmd = subprocess.check_output(trim_output, shell=True)
			split = trim_cmd.decode("utf-8")
			split = split.split("\n")
			os.system("rm file.txt")

			return split

		elif customized_command == "3":
			print("\n\nThe command that will be used is: \"masscan -p1-65535,U:1-65535 "+ip+" --rate=1000 -e tap0 --router-ip 10.11.0.1")
			masscancmd = "masscan -p1-65535,U:1-65535 "+ip+" --rate=1000 -e tap0 --router-ip 10.11.0.1 -oG file.txt"
			masscan = os.system(masscancmd)
			
			trim_output = "cat file.txt | awk 'OFS=\":\" {print $2,$5}' | cut -d/ -f-1 | cut -d : -f 2 | grep -o '^[0-9]*'"
			trim_cmd = subprocess.check_output(trim_output, shell=True)
			split = trim_cmd.decode("utf-8")
			split = split.split("\n")
			os.system("rm file.txt")

		else:
			print('Wrong Choice')
			sys.exit()

	def nmapScan(ip):

		masscan_output = masscan(ip)

		print("\n***********************************************\033[1;33;40mNMAP SCAN\033[m************************************************\n")
		all_ports = ""
		for i in masscan_output:
			if i == "":
				break
			all_ports += i
			all_ports += ","
		print(all_ports)
		nmapcmd = "nmap -sC -sV -p "+all_ports+" -O -oN ~/Desktop/MyScripts/Reports/"+ ip+"/-nmap-Scan.txt "+ip
		nmapscan = os.system(nmapcmd)

		print("\nRunning nmap scan on all ports discovered\n")
		filename = "/root/Desktop/MyScripts/Reports/"+ ip+"/-nmap-Scan.txt"


		try:
			with open(filename, 'rb', 0) as file, \
			mmap.mmap(file.fileno(), 0, access=mmap.ACCESS_READ) as s:
				if s.find(b'IIS') != -1:
					iis(ip, port)
		except:
			print ("\n\033[1;31;40mEmpty nmap File\033[m")


	def iis(ip, port):

		if port == "":
			print("\n***********************************************\033[1;33;40mIIS-Dirsearch SCAN\033[m************************************************\n")
			dircmd = "dirsearch.py -u http://"+ip+" -e .cs,.dll,.config,.cshtml,.asp,.net,.asax,.aspx,.ascx,.ashx,.asmx,.axd,.asp --plain-text-report=/root/Desktop/MyScripts/Reports/"+ip+"/-dirsearch-Scan-.txt"

			#dirb http://"+ip+" -X .cs,.dll,.config,.cshtml,.asp,.net,.asax,.aspx,.ascx,.ashx,.asmx,.axd,.asp -o /root/Desktop/MyScripts/Reports/"+ip+"/-dirb-Scan-.txt"
			os.system(str(dircmd))
		else:
			print("\n***********************************************\033[1;33;40mIIS-Dirsearch SCAN\033[m************************************************\n")
			dircmd = "dirsearch.py -u http://"+ip+":"+port+" -e .cs,.dll,.config,.cshtml,.asp,.net,.asax,.aspx,.ascx,.ashx,.asmx,.axd,.asp --plain-text-report=/root/Desktop/MyScripts/Reports/"+ip+"/-dirsearch-Scan-.txt"
			#dircmd = "dirb http://"+ip+":"+port+" -X .cs,.dll,.config,.cshtml,.asp,.net,.asax,.aspx,.ascx,.ashx,.asmx,.axd,.asp -o /root/Desktop/MyScripts/Reports/"+ip+"/-dirb-Scan-.txt"
			os.system(str(dirbcmd))

			return


	def iisHttps(ip, port):

		if port == "":
			print("\n***********************************************\033[1;33;40mIIS-DIRB SCAN\033[m************************************************\n")
			dircmd = "dirsearch.py -u https://"+ip+" -e .cs,.dll,.config,.cshtml,.asp,.net,.asax,.aspx,.ascx,.ashx,.asmx,.axd,.asp --plain-text-report=/root/Desktop/MyScripts/Reports/"+ip+"/-dirsearch-Scan-.txt"
			os.system(str(dircmd))
		else:
			print("\n***********************************************\033[1;33;40mIIS-DIRB SCAN\033[m************************************************\n")
			dircmd = "dirsearch.py -u https://"+ip+":"+port+" -e .cs,.dll,.config,.cshtml,.asp,.net,.asax,.aspx,.ascx,.ashx,.asmx,.axd,.asp --plain-text-report=/root/Desktop/MyScripts/Reports/"+ip+"/-dirsearch-Scan-.txt"
			os.system(str(dircmd))

			return


	def niktoScanHttps(ip, port):
		if port == "":
			print("\n***********************************************\033[1;33;40mNIKTO HTTPS SCAN\033[m************************************************\n")
			niktocmd = "nikto -h https://"+ip+" -o /root/Desktop/MyScripts/Reports/"+ip+"/Https-Scan-Reports/-Https-nikto-Scan-.txt"
			os.system(niktocmd)

		else:
			print("\n***********************************************\033[1;33;40mNIKTO HTTPS SCAN\033[m************************************************\n")
			niktocmd = "nikto -h https://"+ip+":"+port+" -o /root/Desktop/MyScripts/Reports/"+ip+"/Https-Scan-Reports/-Https-nikto-Scan-.txt"
			os.system(niktocmd)


	def dirsearchScanHttps(ip, port):
		check = "/root/Desktop/MyScripts/Reports/"+ip+"/Https-Scan-Reports/-Https-dirsearch-Scan-.txt"
		if os.path.exists(check):
			print("\n***********************************************\033[1;33;40mDirsearch SCAN\033[m************************************************\n")
			dircmd = "dirsearch.py -u https://"+ip+" -e .php --plain-text-report=/root/Desktop/MyScripts/Reports/"+ip+"/Https-Scan-Reports/-Https-dirsearch-Scan-1.txt"
			os.system(dircmd)

		elif port == "":
			print("\n***********************************************\033[1;33;40mDirsearch SCAN\033[m************************************************\n")
			dircmd = "dirsearch.py -u https://"+ip+" -e .php --plain-text-report=/root/Desktop/MyScripts/Reports/"+ip+"/Https-Scan-Reports/-Https-dirsearch-Scan-.txt"
			os.system(dircmd)

		else:
			print("\n***********************************************\033[1;33;40mDirsearch SCAN\033[m************************************************\n")
			dircmd =  "dirsearch.py -u https://"+ip+":"+port+" -e .php --plain-text-report=/root/Desktop/MyScripts/Reports/"+ip+"/Https-Scan-Reports/-Https-dirsearch-Scan-.txt"
			os.system(dircmd)


	'''
	def dirbScanHttps(ip, port):
		check = "/root/Desktop/MyScripts/Reports/"+ip+"/-Https-dirb-Scan-.txt"
		os.path.exists(check)
		if os.path.exists(check):
			print("\n***********************************************\033[1;33;40mDIRB SCAN\033[m************************************************\n")
			dirbcmd = "dirb https://"+ip+" -o ~/Desktop/MyScripts/Reports/"+ip+"/Https-Scan-Reports/-Https-dirb-Scan-1.txt"
			dirb = os.system(dirbcmd)

		elif port == "":
			print("\n***********************************************\033[1;33;40mDIRB SCAN\033[m************************************************\n")
			dirbcmd = "dirb https://"+ip+" -o ~/Desktop/MyScripts/Reports/"+ip+"/Https-Scan-Reports/-Https-dirb-Scan-.txt"
			dirb = os.system(dirbcmd)

		else:
			print("\n***********************************************\033[1;33;40mDIRB SCAN\033[m************************************************\n")
			dirbcmd = "dirb https://"+ip+":"+port+" -o ~/Desktop/MyScripts/Reports/"+ip+"/Https-Scan-Reports/-Https-dirb-Scan-.txt"
			dirb = os.system(dirbcmd)
	'''


	def Threadhttp(ip, port):

		http(ip, port)

	def Threadhttps(ip, port):

		https(ip, port)


	def http(ip, port):

		services(ip)
		dirsearchScan(ip, port)
		niktoScan(ip, port)


	def https(ip, port):

		dirsearchScanHttps(ip, port)
		niktoScanHttps(ip, port)


	def call(ip):

		#Check http status code
		http = "http://" + ip
		requests.head(http)
		print("\n\n\033[1;33;40m----Web page accessible----\033[m\n")


	def services(ip):
		nmappath = "/root/Desktop/MyScripts/Reports/"+ ip+"/-nmap-Scan.txt"
		file1 = open(nmappath, "r")

		serv_dict = {}
		for line in file1.readlines():
			ports = []
			line = line.strip()
			if ("tcp" in line) and ("open" in line) and not ("Discovered" in line):

				while "  " in line:
					line = line.replace("  ", " ");
				linesplit= line.split(" ")
				service = linesplit[2]
				port = line.split(" ")[0]

				if service in serv_dict:
					ports = serv_dict[service]
				ports.append(port)

				serv_dict[service] = ports

		for serv in serv_dict:

			ports = serv_dict[serv]
			if "http" in serv:
				for port in ports:
					port = port.split("/")[0]
					httpScan(ip, port)

			elif "ssl/http" in serv:
				for port in ports:
					port = port.split("/")[0]
					httpsScan(ip, port)

			elif "ssh" in serv:
				for port in ports:
					port = port.split("/")[0]
					sshScan(ip, port)

			elif "ftp" in serv:
				for port in ports:
					port = port.split("/")[0]
					ftpScan(ip, port)

			elif ("microsoft-ds" in serv) or ("netbios-ssn" == serv):
				for port in ports:
					port = port.split("/")[0]
					path = "/root/Desktop/MyScripts/Reports/"+ip+"/-enum4linux-smbENUM-Scan-.txt"
					os.path.exists(path)
					if os.path.exists(path):
						break
					smbEnum(ip)
					smbScan(ip)

			elif "ms-sql" in serv:
				for port in ports:
					port = port.split("/")[0]
					mssqlScan(ip, port)

			elif "smtp" in serv:
				for port in ports:
					port = port.split("/")[0]
					smtpScan(ip, port)

		return

	def banner():
		print ("\n\n################################################################")
		print ("\n\n\n!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!")
		print ("########                     			      ########")
		print ("########             Enumeration Script               ########")
		print ("########    				              ########")
		print ("########       	 Masscan, NMAP, Dirsearch, Nikto      ########")
		print ("########                     			      ########")
		print ("!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n\n\n")
		print ("################################################################\n\n\n")



	def main():

		#Take input and check validity of IP address
		ip = input("\n\nEnter IP:")
		if ip.count('.') == 3:
			try:
				socket.inet_aton(ip)

			except socket.error:
				print ("IP address is invalid.")
				sys.exit()
		else:
			print("IP address is invalid.")
			sys.exit()


		#Create Directory to store reports of all scans
		try:
			directory = "/root/Desktop/MyScripts/Reports/"+ip

			if not os.path.exists(directory):
				print(subprocess.check_output(["mkdir", directory]))

		except OSError:
			print ('\033[mError:\033[m Creating directory. ' + directory)


		try:
			port = ""
			call(ip)
			banner()
			filename1 = "/root/Desktop/MyScripts/Reports/"+ ip+"/-nmap-Scan.txt"
			nmapScan(ip)
			try:

				with open(filename1, 'rb', 0) as file, \
				mmap.mmap(file.fileno(), 0, access=mmap.ACCESS_READ) as s:
					if s.find(b'443') and s.find(b'80') != -1:
						try:
							directory = "/root/Desktop/MyScripts/Reports/"+ip+"/Https-Scan-Reports"
							if not os.path.exists(directory):
								print(subprocess.check_output(["mkdir", directory]))

						except OSError:

							print ('\033[mError:\033[m Creating directory. ' + directory)
						try:
							t1 = threading.Thread(target=Threadhttp, args=(ip,port))
							t2 = threading.Thread(target=Threadhttps, args=(ip,port))
							t1.start()
							t2.start()

							t1.join()
							t2.join()
						except:
							print ("\033[mError:\033[m unable to start thread")

						#https(ip, port)
						#http(ip, port)
						sys.exit()
					else:
						http(ip, port)
						sys.exit()
			except:
				print("\n\033[1;31;40mnmap File Empty:\033[m")

		except socket_error as serr:
			banner()
			nmapScan(ip)

			try:
				filename1 = "/root/Desktop/MyScripts/Reports/"+ ip+"/-nmap-Scan.txt"
				with open(filename1, 'rb', 0) as file, \
				mmap.mmap(file.fileno(), 0, access=mmap.ACCESS_READ) as s:
					if s.find(b'443') != -1:
						try:
							directory = "/root/Desktop/MyScripts/Reports/"+ip+"/Https-Scan-Reports"
							if not os.path.exists(directory):
								print(subprocess.check_output(["mkdir", directory]))

						except OSError:

							print ('\033[mError:\033[m Creating directory. ' + directory)

						services(ip)
						https(ip, port)
						scanAnotherPort = input("If you want to scan another port, please mention here: \n\033[1;32;40m---(Refer to the above nmap Scan for help)\033[m \033[1;32;40m[If no such port is found, press ENTER]--- \033[m : \n")
						if scanAnotherPort == "":
							sys.exit()
						else:
							http(ip, scanAnotherPort)
							sys.exit()
			except:
				print("\n\033[1;31;40mnmap File Empty:\033[m")


			print("\n\033[1;31;40mERROR:\033[m Couldn't access webpage on ports 80 and 443 \n")
			DandNport = input("If the web page is running on a different port, please enter that port for using dirsearch and nikto \n\033[1;32;40m---(Refer to the above nmap Scan for help)\033[m \033[1;32;40m[If no such port is found, press ENTER]--- \033[m : ")
			print("\n")
			if DandNport == "":
				services(ip)
			else:
				http(ip, DandNport)

except KeyboardInterrupt:
	print("\n\033[1;31;40mY u do deis?\03[m")
	sys.exit(0)
if __name__ == "__main__":
	try:
		main()
	except KeyboardInterrupt:
		print("\n\n\033[1;31;40mY u do deis?\033[m\n")
